stages:
  - test
  - quality
  - pages

prepare:tests:
  stage: test
  image: python:3.7.5
  before_script:
    - export PYTHONPATH=$PYTHONPATH:`pwd`/.
    - pip install -U pip
    - easy_install -U pip
    - pip install virtualenv
    - mkdir -p venv/
    - virtualenv --system-site-packages -p python3 venv/
  script:
    - venv/bin/pip install --no-cache-dir -r requirements.txt
    - venv/bin/coverage run -a tests/bin/detect_test.py
    - venv/bin/coverage run -a tests/bin/generate_test.py
    - venv/bin/coverage run -a tests/model/darknet/layer/boxes_test.py
    - venv/bin/coverage run -a tests/model/darknet/layer/convolutional_test.py
    - venv/bin/coverage run -a tests/model/darknet/layer/normalization_test.py
    - venv/bin/coverage run -a tests/model/darknet/layer/prepare_test.py
    - venv/bin/coverage run -a tests/model/darknet/layer/residual_test.py
    - venv/bin/coverage run -a tests/model/darknet/layer/wrapper_test.py
    - venv/bin/coverage run -a tests/model/darknet/yolov3_test.py
    - venv/bin/coverage run -a tests/model/vision/backbone/recognition_test.py
    - venv/bin/coverage run -a tests/model/vision/layer/bidirectional_test.py
    - venv/bin/coverage run -a tests/model/vision/layer/convolutional_test.py
    - venv/bin/coverage run -a tests/model/vision/vision_test.py
    - venv/bin/coverage run -a tests/parse/feature_test.py
    - venv/bin/coverage run -a tests/parse/process_test.py
    - venv/bin/coverage run -a tests/parse/tokenizer_test.py
    - venv/bin/coverage run -a tests/service/classification_test.py
    - venv/bin/coverage run -a tests/service/dataset_test.py
    - venv/bin/coverage run -a tests/service/detection_test.py
    - venv/bin/coverage run -a tests/util/image_test.py
    - venv/bin/coverage run -a tests/util/path_test.py
    - venv/bin/coverage run -a tests/util/text_test.py
    - venv/bin/coverage html --omit="*/tests*,*/venv*,*__init__*" -i
    - venv/bin/coverage report --omit="*/tests*,*/venv*,*__init__*" -i
    - mv htmlcov/ coverage-python/
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)$/'
  artifacts:
    name: text-recognition
    expire_in: 30 days
    when: always
    paths:
      - coverage-python/

code_quality:
  stage: quality
  image: docker:stable
  services:
    - docker:stable-dind
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SOURCE_CODE="$PWD/recognition"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    name: code-quality-report
    expire_in: 1 week
    when: always
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json

pages:
  stage: pages
  dependencies:
    - prepare:tests
  script:
    - mkdir public
    - mv coverage-python/ public/ || true
    - mv gl-code-quality-report.json public/ || true
  artifacts:
    expire_in: 30 days
    paths:
      - public
  only:
    - master